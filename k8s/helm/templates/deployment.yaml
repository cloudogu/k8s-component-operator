apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "k8s-component-operator.name" . }}-controller-manager
  labels:
    control-plane: controller-manager
    {{- include "k8s-component-operator.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
      {{- include "k8s-component-operator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
        {{- include "k8s-component-operator.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
        {{- end }}
      containers:
        - args:
            - --secure-listen-address=0.0.0.0:8443
            - --upstream=http://127.0.0.1:8080/
            - --v=0
          image: "{{ .Values.kubeRbacProxy.image.registry }}/{{ .Values.kubeRbacProxy.image.repository }}:{{ .Values.kubeRbacProxy.image.tag }}"
          name: kube-rbac-proxy
          ports:
            - containerPort: 8443
              name: https
              protocol: TCP
          resources:
            limits:
            {{- toYaml .Values.kubeRbacProxy.resourceLimits | nindent 14 }}
            requests:
            {{- toYaml .Values.kubeRbacProxy.resourceRequests | nindent 14 }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
        - args:
            - --health-probe-bind-address=:8081
            - --metrics-bind-address=127.0.0.1:8080
            - --leader-elect
          env:
            - name: STAGE
              value: {{ quote .Values.manager.env.stage | default "production" }}
            - name: LOG_LEVEL
              value: {{ quote .Values.manager.env.logLevel | default "info"}}
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: BACKOFF_TIME
              value: {{ .Values.manager.env.backoffTime | default "15" }}
            - name: ROLLBACK_TIMEOUT
              value: {{ .Values.manager.env.rollbackTimeout | default "15" }}
          image: "{{ .Values.manager.image.registry }}/{{ .Values.manager.image.repository }}:{{ .Values.manager.image.tag }}"
          imagePullPolicy: {{ .Values.manager.imagePullPolicy | default "IfNotPresent"}}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          name: manager
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
            {{- toYaml .Values.manager.resourceLimits | nindent 14 }}
            requests:
            {{- toYaml .Values.manager.resourceRequests | nindent 14 }}
          securityContext:
            allowPrivilegeEscalation: false
          volumeMounts:
            - mountPath: /tmp/.helmregistry
              name: component-operator-helm-registry
              readOnly: true
      securityContext:
        runAsNonRoot: true
      serviceAccountName: {{ include "k8s-component-operator.name" . }}-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
        - name: component-operator-helm-registry
          secret:
            secretName: component-operator-helm-registry
