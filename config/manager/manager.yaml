apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  labels:
    app: ces
    app.kubernetes.io/name: k8s-component-operator
    control-plane: controller-manager
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
        app.kubernetes.io/name: k8s-component-operator
        app: ces
    spec:
      securityContext:
        runAsNonRoot: true
      containers:
      - args:
        - --leader-elect
        env:
          - name: STAGE
            value: "production"
          - name: LOG_LEVEL
            value: "debug"
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        image: controller:latest
        imagePullPolicy: IfNotPresent
        name: manager
        securityContext:
          allowPrivilegeEscalation: false
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        volumeMounts:
          - mountPath: "/tmp/.helmregistry"
            name: component-operator-helm-registry
            readOnly: true
      volumes:
        - name: component-operator-helm-registry
          secret:
            secretName: component-operator-helm-registry
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10
