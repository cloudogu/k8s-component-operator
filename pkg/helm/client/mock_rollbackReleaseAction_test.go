// Code generated by mockery v2.20.0. DO NOT EDIT.

package client

import (
	mock "github.com/stretchr/testify/mock"
	action "helm.sh/helm/v3/pkg/action"
)

// mockRollbackReleaseAction is an autogenerated mock type for the rollbackReleaseAction type
type mockRollbackReleaseAction struct {
	mock.Mock
}

type mockRollbackReleaseAction_Expecter struct {
	mock *mock.Mock
}

func (_m *mockRollbackReleaseAction) EXPECT() *mockRollbackReleaseAction_Expecter {
	return &mockRollbackReleaseAction_Expecter{mock: &_m.Mock}
}

// raw provides a mock function with given fields:
func (_m *mockRollbackReleaseAction) raw() *action.Rollback {
	ret := _m.Called()

	var r0 *action.Rollback
	if rf, ok := ret.Get(0).(func() *action.Rollback); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*action.Rollback)
		}
	}

	return r0
}

// mockRollbackReleaseAction_raw_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'raw'
type mockRollbackReleaseAction_raw_Call struct {
	*mock.Call
}

// raw is a helper method to define mock.On call
func (_e *mockRollbackReleaseAction_Expecter) raw() *mockRollbackReleaseAction_raw_Call {
	return &mockRollbackReleaseAction_raw_Call{Call: _e.mock.On("raw")}
}

func (_c *mockRollbackReleaseAction_raw_Call) Run(run func()) *mockRollbackReleaseAction_raw_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *mockRollbackReleaseAction_raw_Call) Return(_a0 *action.Rollback) *mockRollbackReleaseAction_raw_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockRollbackReleaseAction_raw_Call) RunAndReturn(run func() *action.Rollback) *mockRollbackReleaseAction_raw_Call {
	_c.Call.Return(run)
	return _c
}

// rollbackRelease provides a mock function with given fields: releaseName
func (_m *mockRollbackReleaseAction) rollbackRelease(releaseName string) error {
	ret := _m.Called(releaseName)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(releaseName)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// mockRollbackReleaseAction_rollbackRelease_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'rollbackRelease'
type mockRollbackReleaseAction_rollbackRelease_Call struct {
	*mock.Call
}

// rollbackRelease is a helper method to define mock.On call
//   - releaseName string
func (_e *mockRollbackReleaseAction_Expecter) rollbackRelease(releaseName interface{}) *mockRollbackReleaseAction_rollbackRelease_Call {
	return &mockRollbackReleaseAction_rollbackRelease_Call{Call: _e.mock.On("rollbackRelease", releaseName)}
}

func (_c *mockRollbackReleaseAction_rollbackRelease_Call) Run(run func(releaseName string)) *mockRollbackReleaseAction_rollbackRelease_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *mockRollbackReleaseAction_rollbackRelease_Call) Return(_a0 error) *mockRollbackReleaseAction_rollbackRelease_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockRollbackReleaseAction_rollbackRelease_Call) RunAndReturn(run func(string) error) *mockRollbackReleaseAction_rollbackRelease_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTnewMockRollbackReleaseAction interface {
	mock.TestingT
	Cleanup(func())
}

// newMockRollbackReleaseAction creates a new instance of mockRollbackReleaseAction. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMockRollbackReleaseAction(t mockConstructorTestingTnewMockRollbackReleaseAction) *mockRollbackReleaseAction {
	mock := &mockRollbackReleaseAction{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
