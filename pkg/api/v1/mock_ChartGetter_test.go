// Code generated by mockery v2.53.3. DO NOT EDIT.

package v1

import (
	context "context"

	client "github.com/cloudogu/k8s-component-operator/pkg/helm/client"
	chart "helm.sh/helm/v3/pkg/chart"

	mock "github.com/stretchr/testify/mock"
)

// MockChartGetter is an autogenerated mock type for the ChartGetter type
type MockChartGetter struct {
	mock.Mock
}

type MockChartGetter_Expecter struct {
	mock *mock.Mock
}

func (_m *MockChartGetter) EXPECT() *MockChartGetter_Expecter {
	return &MockChartGetter_Expecter{mock: &_m.Mock}
}

// GetChart provides a mock function with given fields: ctx, spec
func (_m *MockChartGetter) GetChart(ctx context.Context, spec *client.ChartSpec) (*chart.Chart, error) {
	ret := _m.Called(ctx, spec)

	if len(ret) == 0 {
		panic("no return value specified for GetChart")
	}

	var r0 *chart.Chart
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *client.ChartSpec) (*chart.Chart, error)); ok {
		return rf(ctx, spec)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *client.ChartSpec) *chart.Chart); ok {
		r0 = rf(ctx, spec)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*chart.Chart)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *client.ChartSpec) error); ok {
		r1 = rf(ctx, spec)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockChartGetter_GetChart_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetChart'
type MockChartGetter_GetChart_Call struct {
	*mock.Call
}

// GetChart is a helper method to define mock.On call
//   - ctx context.Context
//   - spec *client.ChartSpec
func (_e *MockChartGetter_Expecter) GetChart(ctx interface{}, spec interface{}) *MockChartGetter_GetChart_Call {
	return &MockChartGetter_GetChart_Call{Call: _e.mock.On("GetChart", ctx, spec)}
}

func (_c *MockChartGetter_GetChart_Call) Run(run func(ctx context.Context, spec *client.ChartSpec)) *MockChartGetter_GetChart_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*client.ChartSpec))
	})
	return _c
}

func (_c *MockChartGetter_GetChart_Call) Return(_a0 *chart.Chart, _a1 error) *MockChartGetter_GetChart_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockChartGetter_GetChart_Call) RunAndReturn(run func(context.Context, *client.ChartSpec) (*chart.Chart, error)) *MockChartGetter_GetChart_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockChartGetter creates a new instance of MockChartGetter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockChartGetter(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockChartGetter {
	mock := &MockChartGetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
