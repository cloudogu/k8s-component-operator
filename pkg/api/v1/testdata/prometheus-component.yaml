apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    meta.helm.sh/release-name: k8s-prometheus
    meta.helm.sh/release-namespace: ecosystem
    prometheus-operator-input-hash: "2659877362000495089"
  creationTimestamp: "2025-07-09T07:07:50Z"
  generation: 1
  labels:
    app: k8s-prometheus-prometheus
    app.kubernetes.io/instance: k8s-prometheus
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: k8s-prometheus
    app.kubernetes.io/version: 75.3.5
    chart: kube-prometheus-stack-75.3.5
    heritage: Helm
    k8s.cloudogu.com/component.name: k8s-prometheus
    k8s.cloudogu.com/component.version: 75.3.5-1-dev
    managed-by: prometheus-operator
    operator.prometheus.io/mode: server
    operator.prometheus.io/name: k8s-prometheus-prometheus
    operator.prometheus.io/shard: "0"
    release: k8s-prometheus
  name: prometheus-k8s-prometheus-prometheus
  namespace: ecosystem
  ownerReferences:
  - apiVersion: monitoring.coreos.com/v1
    blockOwnerDeletion: true
    controller: true
    kind: Prometheus
    name: k8s-prometheus-prometheus
    uid: c3f6064e-5331-4a19-b6af-50c656678366
  resourceVersion: "199331"
  uid: a54927a3-c564-4dde-9cd1-caf9a6d9ea2d
spec:
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
  podManagementPolicy: Parallel
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: k8s-prometheus-prometheus
      app.kubernetes.io/managed-by: prometheus-operator
      app.kubernetes.io/name: prometheus
      operator.prometheus.io/name: k8s-prometheus-prometheus
      operator.prometheus.io/shard: "0"
      prometheus: k8s-prometheus-prometheus
  serviceName: prometheus-operated
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: prometheus
      creationTimestamp: null
      labels:
        app: k8s-prometheus
        app.kubernetes.io/instance: k8s-prometheus-prometheus
        app.kubernetes.io/managed-by: prometheus-operator
        app.kubernetes.io/name: prometheus
        app.kubernetes.io/version: 3.4.1
        k8s-prometheus: prometheus-server
        k8s.cloudogu.com/component.name: k8s-prometheus
        operator.prometheus.io/name: k8s-prometheus-prometheus
        operator.prometheus.io/shard: "0"
        prometheus: k8s-prometheus-prometheus
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - prometheus
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                  - k8s-prometheus-prometheus
              topologyKey: kubernetes.io/hostname
            weight: 100
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.file=/etc/prometheus/config_out/prometheus.env.yaml
        - --web.enable-lifecycle
        - --web.external-url=http://k8s-prometheus-prometheus.ecosystem:9090
        - --web.route-prefix=/
        - --storage.tsdb.retention.time=10d
        - --storage.tsdb.path=/prometheus
        - --storage.tsdb.wal-compression
        - --web.config.file=/etc/prometheus/web_config/web-config.yaml
        image: quay.io/prometheus/prometheus:v3.4.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /-/healthy
            port: http-web
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        name: prometheus
        ports:
        - containerPort: 9090
          name: http-web
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /-/ready
            port: http-web
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        resources:
          limits:
            memory: 1039M
          requests:
            cpu: 50m
            memory: 1039M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 60
          httpGet:
            path: /-/ready
            port: http-web
            scheme: HTTP
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 3
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/prometheus/config_out
          name: config-out
          readOnly: true
        - mountPath: /etc/prometheus/certs
          name: tls-assets
          readOnly: true
        - mountPath: /prometheus
          name: prometheus-k8s-prometheus-prometheus-db
          subPath: prometheus-db
        - mountPath: /etc/prometheus/rules/prometheus-k8s-prometheus-prometheus-rulefiles-0
          name: prometheus-k8s-prometheus-prometheus-rulefiles-0
        - mountPath: /etc/prometheus/web_config/web-config.yaml
          name: web-config
          readOnly: true
          subPath: web-config.yaml
      - args:
        - --listen-address=:8080
        - --reload-url=http://127.0.0.1:9090/-/reload
        - --config-file=/etc/prometheus/config/prometheus.yaml.gz
        - --config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml
        - --watched-dir=/etc/prometheus/rules/prometheus-k8s-prometheus-prometheus-rulefiles-0
        command:
        - /bin/prometheus-config-reloader
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: SHARD
          value: "0"
        image: quay.io/prometheus-operator/prometheus-config-reloader:v0.82.2
        imagePullPolicy: IfNotPresent
        name: config-reloader
        ports:
        - containerPort: 8080
          name: reloader-web
          protocol: TCP
        resources:
          limits:
            memory: 105M
          requests:
            cpu: 15m
            memory: 105M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/prometheus/config
          name: config
        - mountPath: /etc/prometheus/config_out
          name: config-out
        - mountPath: /etc/prometheus/rules/prometheus-k8s-prometheus-prometheus-rulefiles-0
          name: prometheus-k8s-prometheus-prometheus-rulefiles-0
      - env:
        - name: LOG_LEVEL
          value: INFO
        - name: PROMETHEUS_URL
          value: http://localhost:9090
        - name: WEB_CONFIG_FILE
          value: /config/web.config.yaml
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              key: apiKey
              name: k8s-prometheus-service-account-api
        - name: WEB_PRESETS_FILE
          value: /presets/web.presets.yaml
        image: k3ces.local:30099/k8s-prometheus-auth:75.3.5-1
        imagePullPolicy: Always
        name: auth
        ports:
        - containerPort: 8086
          name: auth-proxy
          protocol: TCP
        - containerPort: 8087
          name: sa-provider
          protocol: TCP
        resources:
          limits:
            memory: 105M
          requests:
            cpu: 15m
            memory: 105M
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /config
          name: ces-config
        - mountPath: /presets
          name: ces-presets
          readOnly: true
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: ces-container-registries
      initContainers:
      - args:
        - --watch-interval=0
        - --listen-address=:8081
        - --config-file=/etc/prometheus/config/prometheus.yaml.gz
        - --config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml
        - --watched-dir=/etc/prometheus/rules/prometheus-k8s-prometheus-prometheus-rulefiles-0
        command:
        - /bin/prometheus-config-reloader
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: SHARD
          value: "0"
        image: quay.io/prometheus-operator/prometheus-config-reloader:v0.82.2
        imagePullPolicy: IfNotPresent
        name: init-config-reloader
        ports:
        - containerPort: 8081
          name: reloader-web
          protocol: TCP
        resources:
          limits:
            memory: 105M
          requests:
            cpu: 15m
            memory: 105M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/prometheus/config
          name: config
        - mountPath: /etc/prometheus/config_out
          name: config-out
        - mountPath: /etc/prometheus/rules/prometheus-k8s-prometheus-prometheus-rulefiles-0
          name: prometheus-k8s-prometheus-prometheus-rulefiles-0
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 2000
        runAsGroup: 2000
        runAsNonRoot: true
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      serviceAccount: k8s-prometheus-prometheus
      serviceAccountName: k8s-prometheus-prometheus
      shareProcessNamespace: false
      terminationGracePeriodSeconds: 600
      volumes:
      - name: config
        secret:
          defaultMode: 420
          secretName: prometheus-k8s-prometheus-prometheus
      - name: tls-assets
        projected:
          defaultMode: 420
          sources:
          - secret:
              name: prometheus-k8s-prometheus-prometheus-tls-assets-0
      - emptyDir:
          medium: Memory
        name: config-out
      - configMap:
          defaultMode: 420
          name: prometheus-k8s-prometheus-prometheus-rulefiles-0
        name: prometheus-k8s-prometheus-prometheus-rulefiles-0
      - name: web-config
        secret:
          defaultMode: 420
          secretName: prometheus-k8s-prometheus-prometheus-web-config
      - name: ces-config
        persistentVolumeClaim:
          claimName: k8s-prometheus-config
      - name: ces-presets
        secret:
          defaultMode: 420
          optional: true
          secretName: k8s-prometheus-auth-presets
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      name: prometheus-k8s-prometheus-prometheus-db
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 4Gi
      volumeMode: Filesystem
    status:
      phase: Pending
status:
  availableReplicas: 1
  collisionCount: 0
  currentReplicas: 1
  currentRevision: prometheus-k8s-prometheus-prometheus-5f8d4cd688
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updateRevision: prometheus-k8s-prometheus-prometheus-5f8d4cd688
  updatedReplicas: 1
