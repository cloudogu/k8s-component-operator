---
# Source: k8s-dogu-operator/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-dogu-operator-controller-manager
  labels:
    app: ces
    app.kubernetes.io/name: k8s-dogu-operator
    app.kubernetes.io/instance: release-name
    helm.sh/chart: k8s-dogu-operator-0.40.0-dev
    app.kubernetes.io/version: "0.40.0-dev"
    app.kubernetes.io/managed-by: Helm
---
# Source: k8s-dogu-operator/templates/additional-images.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: k8s-dogu-operator-additional-images
  labels:
    app: ces
    app.kubernetes.io/name: k8s-dogu-operator
    app.kubernetes.io/instance: release-name
    helm.sh/chart: k8s-dogu-operator-0.40.0-dev
    app.kubernetes.io/version: "0.40.0-dev"
    app.kubernetes.io/managed-by: Helm
data:
  chownInitImage: "busybox:1.36"
---
# Source: k8s-dogu-operator/templates/cluster-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: 'k8s-dogu-operator-cluster-role'
  labels:
    app: ces
    app.kubernetes.io/name: k8s-dogu-operator
    app.kubernetes.io/instance: release-name
    helm.sh/chart: k8s-dogu-operator-0.40.0-dev
    app.kubernetes.io/version: "0.40.0-dev"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - clusterroles
      - clusterrolebindings
    verbs:
      - '*'
---
# Source: k8s-dogu-operator/templates/metrics-reader-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: k8s-dogu-operator-metrics-reader
  labels:
    app: ces
    app.kubernetes.io/name: k8s-dogu-operator
    app.kubernetes.io/instance: release-name
    helm.sh/chart: k8s-dogu-operator-0.40.0-dev
    app.kubernetes.io/version: "0.40.0-dev"
    app.kubernetes.io/managed-by: Helm
rules:
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
# Source: k8s-dogu-operator/templates/cluster-role-binding-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: 'k8s-dogu-operator-cluster-role-binding'
  labels:
    app: ces
    app.kubernetes.io/name: k8s-dogu-operator
    app.kubernetes.io/instance: release-name
    helm.sh/chart: k8s-dogu-operator-0.40.0-dev
    app.kubernetes.io/version: "0.40.0-dev"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'k8s-dogu-operator-cluster-role'
subjects:
  - kind: ServiceAccount
    name: 'k8s-dogu-operator-controller-manager'
    namespace: 'ecosystem'
---
# Source: k8s-dogu-operator/templates/manager-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: k8s-dogu-operator-manager-role
  labels:
    app: ces
    app.kubernetes.io/name: k8s-dogu-operator
    app.kubernetes.io/instance: release-name
    helm.sh/chart: k8s-dogu-operator-0.40.0-dev
    app.kubernetes.io/version: "0.40.0-dev"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - '*'
---
# Source: k8s-dogu-operator/templates/manager-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: k8s-dogu-operator-manager-rolebinding
  labels:
    app: ces
    app.kubernetes.io/name: k8s-dogu-operator
    app.kubernetes.io/instance: release-name
    helm.sh/chart: k8s-dogu-operator-0.40.0-dev
    app.kubernetes.io/version: "0.40.0-dev"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 'k8s-dogu-operator-manager-role'
subjects:
  - kind: ServiceAccount
    name: 'k8s-dogu-operator-controller-manager'
    namespace: 'ecosystem'
---
# Source: k8s-dogu-operator/templates/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: k8s-dogu-operator-controller-manager-metrics-service
  labels:
    control-plane: controller-manager
    app: ces
    app.kubernetes.io/name: k8s-dogu-operator
    app.kubernetes.io/instance: release-name
    helm.sh/chart: k8s-dogu-operator-0.40.0-dev
    app.kubernetes.io/version: "0.40.0-dev"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - name: https
      port: 8443
      protocol: TCP
      targetPort: https
---
# Source: k8s-dogu-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-dogu-operator-controller-manager
  labels:
    control-plane: controller-manager
    app: ces
    app.kubernetes.io/name: k8s-dogu-operator
    app.kubernetes.io/instance: release-name
    helm.sh/chart: k8s-dogu-operator-0.40.0-dev
    app.kubernetes.io/version: "0.40.0-dev"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
      app.kubernetes.io/name: k8s-dogu-operator
      app.kubernetes.io/instance: release-name
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
        app.kubernetes.io/name: k8s-dogu-operator
        app.kubernetes.io/instance: release-name
    spec:
      containers:
        - args:
            - --health-probe-bind-address=:8081
            - --metrics-bind-address=127.0.0.1:8080
          env:
            - name: STAGE
              value: "development"
            - name: LOG_LEVEL
              value: "debug"
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: DOGU_REGISTRY_ENDPOINT
              valueFrom:
                secretKeyRef:
                  key: endpoint
                  name: k8s-dogu-operator-dogu-registry
            - name: DOGU_REGISTRY_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: k8s-dogu-operator-dogu-registry
            - name: DOGU_REGISTRY_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: k8s-dogu-operator-dogu-registry
            - name: DOGU_REGISTRY_URLSCHEMA
              valueFrom:
                secretKeyRef:
                  key: urlschema
                  name: k8s-dogu-operator-dogu-registry
                  optional: true
            - name: DOCKER_REGISTRY
              valueFrom:
                secretKeyRef:
                  key: .dockerconfigjson
                  name: k8s-dogu-operator-docker-registry
            - name: DOGU_STARTUP_PROBE_TIMEOUT
              value: "1"
          image: k3ces.local:30099/k8s-dogu-operator:0.40.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          name: manager
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
          volumeMounts:
            - mountPath: /etc/ssl/certs/dogu-registry-cert.pem
              name: dogu-registry-cert
              subPath: dogu-registry-cert.pem
            - mountPath: /etc/ssl/certs/docker-registry-cert.pem
              name: docker-registry-cert
              subPath: docker-registry-cert.pem
      securityContext:
        runAsNonRoot: true
      serviceAccountName: k8s-dogu-operator-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
        - name: docker-registry-cert
          secret:
            optional: true
            secretName: docker-registry-cert
        - name: dogu-registry-cert
          secret:
            optional: true
            secretName: dogu-registry-cert